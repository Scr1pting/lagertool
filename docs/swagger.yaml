basePath: /
definitions:
  api.ShelfRequest:
    properties:
      building:
        type: string
      columns:
        items:
          properties:
            elements:
              items:
                properties:
                  heightUnits:
                    type: integer
                  id:
                    type: string
                  type:
                    type: string
                required:
                - heightUnits
                - id
                - type
                type: object
              type: array
            num:
              type: integer
          required:
          - elements
          - num
          type: object
        type: array
      name:
        type: string
      room:
        type: string
    required:
    - building
    - columns
    - name
    - room
    type: object
  api.ShelfResponse:
    properties:
      building:
        type: string
      columns:
        items:
          properties:
            elements:
              items:
                properties:
                  heightUnits:
                    type: integer
                  id:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            num:
              type: integer
          type: object
        type: array
      name:
        type: string
      room:
        type: string
    type: object
  db.Event:
    properties:
      created_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      name:
        type: string
      start_date:
        type: string
    type: object
  db.EventHelper:
    properties:
      event_id:
        type: integer
      id:
        type: integer
      person_id:
        type: integer
    type: object
  db.EventLoan:
    properties:
      amount:
        type: integer
      borrowed_at:
        type: string
      event_id:
        type: integer
      id:
        type: integer
      item_id:
        type: integer
      person_id:
        description: Who borrowed it
        type: integer
      returned_at:
        description: NULL if not yet returned
        type: string
    type: object
  db.Inventory:
    properties:
      amount:
        type: integer
      id:
        type: integer
      item_id:
        type: integer
      location_id:
        type: integer
      note:
        type: string
    type: object
  db.Item:
    properties:
      category:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  db.Loans:
    properties:
      amount:
        type: integer
      begin:
        type: string
      id:
        type: integer
      item_id:
        type: integer
      person_id:
        type: integer
      returned:
        type: boolean
      returned_at:
        type: string
      until:
        type: string
    type: object
  db.Location:
    properties:
      id:
        type: integer
      shelf_unit_id:
        description: Reference to ShelfUnit.ID
        type: string
    type: object
  db.Person:
    properties:
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
      slack_id:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@lagertool.com
    name: API Support
  description: Backend API for inventory management system tracking items, locations,
    and loans
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Lagertool Inventory API
  version: "1.0"
paths:
  /events:
    get:
      description: Retrieve all events from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Event'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all events
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Create a new event with the provided details. The ID is auto-generated
        and should not be included in the request body.
      parameters:
      - description: Event object
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/db.Event'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Event'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new event
      tags:
      - events
  /events/{id}:
    delete:
      description: Delete an event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an event
      tags:
      - events
    get:
      description: Retrieve a specific event by its ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Event'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get event by ID
      tags:
      - events
    put:
      consumes:
      - application/json
      description: Update an existing event by ID. The ID in the request body is ignored;
        use the path parameter.
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Event object
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/db.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Event'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an event
      tags:
      - events
  /events/{id}/helpers:
    get:
      description: Retrieve all persons who are helpers for a specific event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.EventHelper'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all helpers for an event
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Add a person as a helper to an event, allowing them to borrow items
        for the event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Helper object with person_id
        in: body
        name: helper
        required: true
        schema:
          properties:
            person_id:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.EventHelper'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a helper to an event
      tags:
      - events
  /events/{id}/helpers/{person_id}:
    delete:
      description: Remove a person from being a helper for an event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Person ID
        in: path
        name: person_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Remove a helper from an event
      tags:
      - events
  /events/{id}/loans:
    get:
      description: Retrieve all item loans (both active and returned) for a specific
        event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.EventLoan'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all loans for an event
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Create a new loan record for an item borrowed for an event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Loan object
        in: body
        name: loan
        required: true
        schema:
          properties:
            amount:
              type: integer
            item_id:
              type: integer
            person_id:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.EventLoan'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Borrow an item for an event
      tags:
      - events
  /events/{id}/loans/{loan_id}/return:
    post:
      description: Mark a specific event loan as returned
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Event Loan ID
        in: path
        name: loan_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Return a specific event loan
      tags:
      - events
  /events/{id}/loans/active:
    get:
      description: Retrieve all unreturned item loans for a specific event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.EventLoan'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get active loans for an event
      tags:
      - events
  /events/{id}/loans/return-all:
    post:
      description: Mark all unreturned loans for an event as returned at once
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Return all items for an event
      tags:
      - events
  /inventory:
    get:
      description: Retrieve all item-location inventory records from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Inventory'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all inventory records
      tags:
      - inventory
    post:
      consumes:
      - application/json
      description: Create a new inventory record (link an item to a location with
        an amount). The ID is auto-generated and should not be included in the request
        body.
      parameters:
      - description: Inventory record object
        in: body
        name: inventory
        required: true
        schema:
          $ref: '#/definitions/db.Inventory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Inventory'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new inventory record
      tags:
      - inventory
  /inventory/{id}:
    delete:
      description: Delete an inventory record by ID
      parameters:
      - description: Inventory Record ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an inventory record
      tags:
      - inventory
    get:
      description: Retrieve a specific inventory record by its ID
      parameters:
      - description: Inventory Record ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Inventory'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get inventory record by ID
      tags:
      - inventory
    put:
      consumes:
      - application/json
      description: Update an existing inventory record by ID. The ID in the request
        body is ignored; use the path parameter.
      parameters:
      - description: Inventory Record ID
        in: path
        name: id
        required: true
        type: integer
      - description: Inventory record object
        in: body
        name: inventory
        required: true
        schema:
          $ref: '#/definitions/db.Inventory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Inventory'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an inventory record
      tags:
      - inventory
  /inventory/{id}/amount:
    patch:
      consumes:
      - application/json
      description: Partially update the amount of an inventory record by ID
      parameters:
      - description: Inventory Record ID
        in: path
        name: id
        required: true
        type: integer
      - description: New amount value
        in: body
        name: request
        required: true
        schema:
          properties:
            amount:
              type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Inventory'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update inventory amount
      tags:
      - inventory
  /inventory/item/{item_id}:
    get:
      description: Retrieve all inventory records for a specific item
      parameters:
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Inventory'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get inventory records by item ID
      tags:
      - inventory
  /inventory/location/{location_id}:
    get:
      description: Retrieve all inventory records for a specific location
      parameters:
      - description: Location ID
        in: path
        name: location_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Inventory'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get inventory records by location ID
      tags:
      - inventory
  /items:
    get:
      description: Retrieve all items from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Item'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Create a new item with the provided details. The ID is auto-generated
        and should not be included in the request body.
      parameters:
      - description: Item object
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/db.Item'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Item'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new item
      tags:
      - items
  /items/{id}:
    delete:
      description: Delete an item by ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an item
      tags:
      - items
    get:
      description: Retrieve a specific item by its ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Item'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get item by ID
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Update an existing item by ID. The ID in the request body is ignored;
        use the path parameter.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Item object
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/db.Item'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Item'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an item
      tags:
      - items
  /items/search:
    get:
      description: Search for items with a case-insensitive name query
      parameters:
      - description: Item name to search for
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Item'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search items by name
      tags:
      - items
  /loans:
    get:
      description: Retrieve all loan records from the database. Optionally filter
        by returned status using the 'returned' query parameter (true/false).
      parameters:
      - description: Filter by returned status (true/false)
        in: query
        name: returned
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Loans'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all loans
      tags:
      - loans
    post:
      consumes:
      - application/json
      description: Create a new loan record. The ID is auto-generated and should not
        be included in the request body. Date fields must be in RFC3339 format (e.g.,
        "2025-10-10T14:30:00Z").
      parameters:
      - description: Loan record object
        in: body
        name: loan
        required: true
        schema:
          $ref: '#/definitions/db.Loans'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Loans'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new loan record
      tags:
      - loans
  /loans/{id}:
    delete:
      description: Delete a loan record by ID
      parameters:
      - description: Loan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a loan record
      tags:
      - loans
    get:
      description: Retrieve a specific loan record by its ID
      parameters:
      - description: Loan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Loans'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get loan by ID
      tags:
      - loans
    put:
      consumes:
      - application/json
      description: Update an existing loan record by ID. The ID in the request body
        is ignored; use the path parameter. Date fields must be in RFC3339 format
        (e.g., "2025-10-10T14:30:00Z").
      parameters:
      - description: Loan ID
        in: path
        name: id
        required: true
        type: integer
      - description: Loan record object
        in: body
        name: loan
        required: true
        schema:
          $ref: '#/definitions/db.Loans'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Loans'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a loan record
      tags:
      - loans
  /loans/{id}/return:
    patch:
      description: Mark a loan as returned by setting the returned flag to true and
        recording the return timestamp
      parameters:
      - description: Loan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Loans'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Mark a loan as returned
      tags:
      - loans
  /loans/item/{item_id}/history:
    get:
      description: Retrieve all loan records (both active and returned) for a specific
        item
      parameters:
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Loans'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get borrow history for an item
      tags:
      - loans
  /loans/overdue:
    get:
      description: Retrieve all non-returned loan records where the return date (`until`)
        is in the past
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Loans'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all overdue loans
      tags:
      - loans
  /loans/permanent/{perm_id}:
    get:
      description: Retrieve all loan records associated with a specific permanent
        item
      parameters:
      - description: Permanent Item ID
        in: path
        name: perm_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Loans'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get loans by permanent item ID
      tags:
      - loans
  /loans/person/{person_id}:
    get:
      description: Retrieve all loan records associated with a specific person
      parameters:
      - description: Person ID
        in: path
        name: person_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Loans'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get loans by person ID
      tags:
      - loans
  /loans/person/{person_id}/history:
    get:
      description: Retrieve all loan records (both active and returned) for a specific
        person
      parameters:
      - description: Person ID
        in: path
        name: person_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Loans'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get borrow history for a person
      tags:
      - loans
  /locations:
    get:
      description: Retrieve all locations from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Location'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all locations
      tags:
      - locations
    post:
      consumes:
      - application/json
      description: Create a new location with the provided details. The ID is auto-generated
        and should not be included in the request body.
      parameters:
      - description: Location object
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/db.Location'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Location'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new location
      tags:
      - locations
  /locations/{id}:
    delete:
      description: Delete a location by ID
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a location
      tags:
      - locations
    get:
      description: Retrieve a specific location by its ID
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Location'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get location by ID
      tags:
      - locations
    put:
      consumes:
      - application/json
      description: Update an existing location by ID. The ID in the request body is
        ignored; use the path parameter.
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      - description: Location object
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/db.Location'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Location'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a location
      tags:
      - locations
  /persons:
    get:
      description: Retrieve all persons from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Person'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all persons
      tags:
      - persons
    post:
      consumes:
      - application/json
      description: Create a new person with the provided details. The ID is auto-generated
        and should not be included in the request body.
      parameters:
      - description: Person object
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/db.Person'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Person'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new person
      tags:
      - persons
  /persons/{id}:
    delete:
      description: Delete a person by ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a person
      tags:
      - persons
    get:
      description: Retrieve a specific person by their ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Person'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get person by ID
      tags:
      - persons
    put:
      consumes:
      - application/json
      description: Update an existing person by ID. The ID in the request body is
        ignored; use the path parameter.
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      - description: Person object
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/db.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Person'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a person
      tags:
      - persons
  /persons/{id}/event-loans:
    get:
      description: Retrieve all event loans for a specific person across all events
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.EventLoan'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get event loans by person
      tags:
      - events
  /persons/search:
    get:
      description: Search for persons by firstname or lastname (case-insensitive partial
        match)
      parameters:
      - description: First name query for search
        in: query
        name: firstname
        type: string
      - description: Last name query for search
        in: query
        name: lastname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Person'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search persons
      tags:
      - persons
  /shelves:
    get:
      description: Retrieve all shelves from the database with their layouts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ShelfResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all shelves
      tags:
      - shelves
    post:
      consumes:
      - application/json
      description: Parse the JSON shelf definition and create the corresponding Shelf
        and ShelfUnit entries in the database
      parameters:
      - description: Shelf layout object
        in: body
        name: shelf
        required: true
        schema:
          $ref: '#/definitions/api.ShelfRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new shelf layout
      tags:
      - shelves
  /shelves/building/{building}:
    get:
      description: Retrieve all shelves for a specific building with their layout
      parameters:
      - description: Building name
        in: path
        name: building
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ShelfResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all shelves in a building
      tags:
      - shelves
  /shelves/building/{building}/room/{room}:
    get:
      description: Retrieve all shelves for a specific building and room with their
        layout
      parameters:
      - description: Building name
        in: path
        name: building
        required: true
        type: string
      - description: Room name
        in: path
        name: room
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ShelfResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all shelves in a room
      tags:
      - shelves
  /shelves/unit/{id}:
    get:
      description: Find a shelf unit by its unique 5-letter ID and return its location
        details
      parameters:
      - description: Shelf Unit ID (5-letter code)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search for a shelf unit by its ID
      tags:
      - shelves
schemes:
- http
swagger: "2.0"
