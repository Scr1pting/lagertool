basePath: /
definitions:
  db.Item:
    properties:
      category:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  db.Location:
    properties:
      building:
        type: string
      campus:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      room:
        type: string
      shelf:
        type: string
      shelfunit:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@lagertool.com
    name: API Support
  description: Backend API for inventory management system tracking items, locations,
    and loans
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Lagertool Inventory API
  version: "1.0"
paths:
  /items:
    get:
      description: Retrieve all items from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Item'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Create a new item with the provided details
      parameters:
      - description: Item object
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/db.Item'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Item'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new item
      tags:
      - items
  /items/{id}:
    get:
      description: Retrieve a specific item by its ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Item'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get item by ID
      tags:
      - items
  /items/search:
    get:
      description: Search for items with a case-insensitive name query
      parameters:
      - description: Item name to search for
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Item'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search items by name
      tags:
      - items
  /locations:
    get:
      description: Retrieve all locations from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Location'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all locations
      tags:
      - locations
    post:
      consumes:
      - application/json
      description: Create a new location with the provided details
      parameters:
      - description: Location object
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/db.Location'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Location'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new location
      tags:
      - locations
  /locations/{id}:
    delete:
      description: Delete a location by ID
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a location
      tags:
      - locations
    get:
      description: Retrieve a specific location by its ID
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Location'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get location by ID
      tags:
      - locations
    put:
      consumes:
      - application/json
      description: Update an existing location by ID
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      - description: Location object
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/db.Location'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Location'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a location
      tags:
      - locations
schemes:
- http
swagger: "2.0"
